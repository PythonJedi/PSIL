PSIL (PSIL Seriously Isn't Lisp!)
Syntax Definition, Version 2
Author: Timothy Hewitt
Date: 10/3/2016

Introduction:
    This file is the full syntax definition for PSIL. Much simpler than the
    'classic' PSIL syntax.

Associative Array:
    The associative array (hereafter simply called an 'array'), is the base data
    structure of PSIL. This contrasts with lisp's cons-cell based linked lists.
    PSIL pulls its primary syntax from its parent language, python. Each array
    is bounded by matching curly braces, each pair separated by a comma (or a
    newline, or both), and each key delineated from its value by a colon.

    PSIL does inherit the bare symbol syntax of lisp, not requiring "" around
    keys or values.

Set:
    A set is actually an array where every value is the special value None. This
    takes the place of lisp's atoms as the fixed point of eval(). In fact, bare
    symbols as keys or values are implicitly singleton sets. The use of None as
    the values for an array to denote a set is inherited directly from python.

Quoting:
    Also inherited from lisp is the shorthand quoting syntax of using a single
    apostrophe before an expression.

Reserved words:
    As this PSIL implementation is minimal, there are only 9 reserved words.
    They are get (car), union (cons), remove (cdr), lambda, let (label), cond,
    set? (atom?), eq?, and quote. This 1-1 correspondence with McCarthy's
    original LISP functions provides a positive indication for the computing
    power of PSIL to be equivalent to that of LISP.
